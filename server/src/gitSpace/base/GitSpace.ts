/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { ObjectType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsDate,
  ValidateNested,
  IsOptional,
  IsString,
  IsEnum,
} from "class-validator";
import { Type } from "class-transformer";
import { GitProviderSetting } from "../../gitProviderSetting/base/GitProviderSetting";
import { EnumGitSpaceProvider } from "./EnumGitSpaceProvider";
import { EnumGitSpaceSpaceType } from "./EnumGitSpaceSpaceType";
import { User } from "../../user/base/User";

@ObjectType()
class GitSpace {
  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  createdAt!: Date;

  @ApiProperty({
    required: false,
    type: () => GitProviderSetting,
  })
  @ValidateNested()
  @Type(() => GitProviderSetting)
  @IsOptional()
  gitProviderSetting?: GitProviderSetting | null;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  id!: string;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  name!: string | null;

  @ApiProperty({
    required: false,
    enum: EnumGitSpaceProvider,
  })
  @IsEnum(EnumGitSpaceProvider)
  @IsOptional()
  @Field(() => EnumGitSpaceProvider, {
    nullable: true,
  })
  provider?: "GitHub" | "GitLab" | "Bitbucket" | null;

  @ApiProperty({
    required: false,
    enum: EnumGitSpaceSpaceType,
  })
  @IsEnum(EnumGitSpaceSpaceType)
  @IsOptional()
  @Field(() => EnumGitSpaceSpaceType, {
    nullable: true,
  })
  spaceType?: "Organization" | "User" | null;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  updatedAt!: Date;

  @ApiProperty({
    required: false,
    type: () => User,
  })
  @ValidateNested()
  @Type(() => User)
  @IsOptional()
  user?: User | null;
}

export { GitSpace as GitSpace };
